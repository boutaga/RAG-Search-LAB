{
  "openapi": "3.1.0",
  "info": {
    "title": "SD-MCP Python Agent",
    "description": "Python/Langchain MCP server for Service Desk Agent with advanced RAG, LLM, analytics, UI, and feedback loops",
    "version": "0.9"
  },
  "paths": {
    "/search": {
      "get": {
        "summary": "Search",
        "description": "Run a hybrid RAG search and return the generated answer.\n\n**Parameters**\n- `query`: user search text\n- `limit`: number of documents to retrieve\n- `rerank`: whether to apply hybrid reranking\n- `max_tokens`: maximum context window\n- `user`: optional user identifier\n\n**Returns** the answer string with the context chunks used.",
        "operationId": "search_search_get",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Query"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 5,
              "title": "Limit"
            }
          },
          {
            "name": "rerank",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Rerank"
            }
          },
          {
            "name": "max_tokens",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 2048,
              "title": "Max Tokens"
            }
          },
          {
            "name": "user",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/feedback-loop": {
      "post": {
        "summary": "Feedback Loop Endpoint",
        "description": "Record user feedback for an LLM answer.",
        "operationId": "feedback_loop_endpoint_feedback_loop_post",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Query"
            }
          },
          {
            "name": "llm_output",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Llm Output"
            }
          },
          {
            "name": "rating",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Rating"
            }
          },
          {
            "name": "comments",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Comments"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/analytics/ticket-volume": {
      "get": {
        "summary": "Ticket Volume",
        "description": "Return ticket counts per day between start and end dates.",
        "operationId": "ticket_volume_analytics_ticket_volume_get",
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Start"
            }
          },
          {
            "name": "end",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "End"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/analytics/resolution-times": {
      "get": {
        "summary": "Resolution Times",
        "description": "Return average ticket resolution time in hours.",
        "operationId": "resolution_times_analytics_resolution_times_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/analytics/sla-compliance": {
      "get": {
        "summary": "Sla Compliance",
        "description": "Return percentage of tickets resolved within the given SLA hours.",
        "operationId": "sla_compliance_analytics_sla_compliance_get",
        "parameters": [
          {
            "name": "hours",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 48,
              "title": "Hours"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/analytics/agent-leaderboard": {
      "get": {
        "summary": "Agent Leaderboard",
        "description": "Return top agents by metric value from agent_metrics.",
        "operationId": "agent_leaderboard_analytics_agent_leaderboard_get",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/analytics/document-usage": {
      "get": {
        "summary": "Document Usage",
        "description": "Return document retrieval counts from retrieval history.",
        "operationId": "document_usage_analytics_document_usage_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/analytics/export": {
      "get": {
        "summary": "Export Analytics",
        "description": "Export analytics data as JSON or CSV.",
        "operationId": "export_analytics_analytics_export_get",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Type"
            }
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "json",
              "title": "Format"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/llm/triage_ticket": {
      "post": {
        "summary": "Triage Ticket",
        "description": "Classify ticket priority using an LLM chain",
        "operationId": "triage_ticket_llm_triage_ticket_post",
        "parameters": [
          {
            "name": "ticket_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Ticket Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/llm/root_cause": {
      "post": {
        "summary": "Root Cause",
        "description": "Return a likely root cause for the ticket",
        "operationId": "root_cause_llm_root_cause_post",
        "parameters": [
          {
            "name": "ticket_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Ticket Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/llm/summarize_ticket": {
      "post": {
        "summary": "Summarize Ticket",
        "description": "Summarize the ticket into a short paragraph",
        "operationId": "summarize_ticket_llm_summarize_ticket_post",
        "parameters": [
          {
            "name": "ticket_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Ticket Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/llm/followup_actions": {
      "post": {
        "summary": "Followup Actions",
        "description": "Suggest follow-up actions for the ticket",
        "operationId": "followup_actions_llm_followup_actions_post",
        "parameters": [
          {
            "name": "ticket_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Ticket Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/notify/teams": {
      "post": {
        "summary": "Notify Teams",
        "description": "Send a Microsoft Teams message.",
        "operationId": "notify_teams_notify_teams_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TeamsPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/notify/pagerduty": {
      "post": {
        "summary": "Notify Pagerduty",
        "description": "Trigger a PagerDuty incident.",
        "operationId": "notify_pagerduty_notify_pagerduty_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PagerDutyPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "PagerDutyPayload": {
        "properties": {
          "summary": {
            "type": "string",
            "title": "Summary",
            "description": "Incident summary",
            "example": "DB down"
          },
          "severity": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Severity",
            "description": "PagerDuty severity level",
            "default": "info",
            "example": "critical"
          },
          "source": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source",
            "description": "Event source",
            "default": "custom-agent-tools-py",
            "example": "sd-agent"
          }
        },
        "type": "object",
        "required": [
          "summary"
        ],
        "title": "PagerDutyPayload"
      },
      "TeamsPayload": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Notification text",
            "example": "Server CPU high"
          }
        },
        "type": "object",
        "required": [
          "message"
        ],
        "title": "TeamsPayload"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    }
  }
}
